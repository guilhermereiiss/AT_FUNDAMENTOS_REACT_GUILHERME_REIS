import Modal from 'react-modal';
import { ToastSucesso, ToastErro } from "./toast.jsx"
import Hotel from './hoteis.module.css';
import { useState, useEffect } from 'react';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { nanoid } from 'nanoid';
import { SiHotelsdotcom } from "react-icons/si";



const customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
    },
};

export default function Hoteis() {
    const [modalIsOpen, setIsOpen] = useState(false);
    const [formulario, setFormulario] = useState({
        imagem: '',
        classificacao: '',
        cidade: '',
        nome: '',
        estado: '',
        preco: '',
        descricao: ''
    });

    const [hoteis, setHoteis] = useState([]);
    const [erros, setErros] = useState({})



    function carregarHoteisBD() {
        const hoteisCarregados = localStorage.getItem("@hoteis");

        if (hoteisCarregados) {
            const hoteisConvertidos = JSON.parse(hoteisCarregados);
            setHoteis(hoteisConvertidos);
        }
    }

    useEffect(() => {
        carregarHoteisBD();
    }, []);

    function removerHotel(id) {
        const hoteisFiltrados = hoteis.filter((hotel) => hotel.id !== id);
    
        setHoteis(hoteisFiltrados);
    
        localStorage.setItem("@hoteis", JSON.stringify(hoteisFiltrados));
    }

    function openModal() {
        setIsOpen(true);
    }

    function closeModal() {
        setIsOpen(false);
    }


    const validarForm = () => {
        const erros = {};

        if (!formulario.imagem || !formulario.nome || !formulario.cidade || !formulario.estado || !formulario.preco || formulario.preco <= 0 || !formulario.descricao) erros.descricao = "Preencha todos os campos";

        return erros
    }

    const salvarHotel = (event) => {

        const errosValidados = validarForm();
        setErros(errosValidados);

        event.preventDefault();
        setIsOpen(false);

        if (formulario.nome && formulario.cidade && formulario.estado && formulario.preco) {
            const ID = nanoid();

            const novosHoteis = [...hoteis, { ...formulario, id: ID }
            ];

            setHoteis(novosHoteis);
            localStorage.setItem('@hoteis', JSON.stringify(novosHoteis));
            toast.success("Hotel salvo com sucesso!", {
                style: ToastSucesso,
                hideProgressBar: true
            });
        } else {
            toast.error("Preencha todos os campos obrigatórios antes de salvar", {
                style: ToastErro,
                hideProgressBar: true
            });
        }
    };

    

    return (
        <div>
            <button className={Hotel.Modal_Btn} onClick={openModal}><SiHotelsdotcom />
            </button>
            <Modal
                isOpen={modalIsOpen}
                onRequestClose={closeModal}
                style={customStyles}
                contentLabel="Cadastro de Hotel"
            >
                <div className={Hotel.formularioContainer}>
                    <form onSubmit={salvarHotel}>

                        <div className={Hotel.imagem_form}>
                            <label htmlFor="imagem">Imagem:</label>
                            <input
                                placeholder='Importe uma imagem'
                                type="file"
                                name="imagem"
                                value={formulario.imagem}
                                onChange={(event) =>
                                    setFormulario({ ...formulario, imagem: event.target.value })}
                            />
                        </div>

                        <div>
                            <label htmlFor="nome">Nome do Hotel:</label>
                            <input
                                type="text"
                                name="nome"
                                value={formulario.nome}
                                onChange={(event) =>
                                    setFormulario({ ...formulario, nome: event.target.value })}
                            />
                        </div>

                        <div>
                            <label htmlFor="classificacao">Nota (1-5):</label>
                            <input
                                type="text"
                                name="classificacao"
                                value={formulario.classificacao}
                                onChange={(event) =>
                                    setFormulario({ ...formulario, classificacao: event.target.value })}
                            />
                        </div>

                        <div>
                            <label htmlFor="cidade">Cidade:</label>
                            <input
                                type="text"
                                name="cidade"
                                value={formulario.cidade}
                                onChange={(event) =>
                                    setFormulario({ ...formulario, cidade: event.target.value })}
                            />
                        </div>



                        <div className={Hotel.Horizontal_form}>
                            <div>
                                <label htmlFor="estado">Estado:</label>
                                <input
                                    type="text"
                                    name="estado"
                                    value={formulario.estado}
                                    onChange={(event) =>
                                        setFormulario({ ...formulario, estado: event.target.value })}
                                />
                            </div>

                            <div className={Hotel.Vertical_Form}>
                                <label htmlFor="preco">Preço:</label>
                                <input
                                    type="number"
                                    name="preco"
                                    value={formulario.preco}
                                    onChange={(event) =>
                                        setFormulario({ ...formulario, preco: event.target.value })}
                                />
                            </div>
                        </div>

                        <div className={Hotel.Vertical_Form}>
                            <label htmlFor="descricao">Descrição:</label>
                            <textarea
                                name="descricao"
                                value={formulario.descricao}
                                onChange={(event) =>
                                    setFormulario({ ...formulario, descricao: event.target.value })}
                            />
                            <span>{erros.descricao}</span>
                        </div>

                        <button type="submit">Salvar Hotel</button>
                        <ToastContainer />
                    </form>




                </div>
            </Modal>
        </div>
    )
}